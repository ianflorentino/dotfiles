#!/bin/bash
#
#https://github.com/achiu/dotfiles

readonly DOTFILES_ROOT=$(pwd)

readonly INFO_HEADER="  [ \033[00;34m....\033[0m ]"
readonly USER_HEADER="  [ \033[00;33m????\033[0m ]"
readonly OKAY_HEADER="  [ \033[00;32mOKAY\033[0m ]"
readonly FAIL_HEADER="  [ \033[00;31mFAIL\033[0m ]"

info() {
  local msg=$1
  printf "$INFO_HEADER $msg \n"
}

user() {
  local msg=$1
  printf "$USER_HEADER $msg "
}

okay() {
  local msg=$1
  printf "$OKAY_HEADER $msg \n"
}

fail() {
  local msg=$1
  printf "$FAIL_HEADER $msg \n"
  exit
}

link_files() {
  local target=$1
  local destination=$2
  ln -s $target $destination
  okay "linked $target to $destination"
}

is_existent() {
  local file=$1
  [ -a $file ] || [ -L $file ]
}

ask_action() {
  overwrite=false
  backup=false
  skip=false

  local $file=$1
  local action

  user "File already exists: $file, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
  read -n 1 action

  case "$action" in
    o )
      overwrite=true;;
    O )
      overwrite_all=true;;
    b )
      backup=true;;
    B )
      backup_all=true;;
    s )
      skip=true;;
    S )
      skip_all=true;;
    * )
      ;;
  esac
  printf "\n"
}

not_option_all() {
  [ "$overwrite_all" == "false" ] \
  && [ "$backup_all" == "false" ] \
  && [ "$skip_all" == "false" ]
}

commit_overwrite() {
  local destination=$1
  if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
  then
    rm -rf $destination
    okay "removed $destination"
  fi
}

commit_backup() {
  local destination=$1
  if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
  then
    mv $destination $destination\.backup
    okay "moved $destination to $destination.backup"
  fi
}

commit_skip() {
  local target=$1
  local destination=$2
  if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
  then
    link_files $target $destination
  else
    okay "skipped $target"
  fi
}

install_dotfiles() {
  overwrite_all=false
  backup_all=false
  skip_all=false
  local files=$(ls $DOTFILES_ROOT | grep -v 'README.md' | grep -v 'script')
  local dotfile
  local action

  for dotfile in $files
  do
    local destination="$HOME/.$dotfile"
    local target="$DOTFILES_ROOT/$dotfile"

    if is_existent $destination
    then
      if not_option_all
      then
        ask_action $destination
      fi
      commit_overwrite $destination
      commit_backup $destination
      commit_skip $target $destination

    else
      link_files $target $destination
    fi
  done
}

install_dotfiles
